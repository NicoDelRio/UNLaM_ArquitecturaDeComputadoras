  ADDR B1 B2 B3 B4 C:\Users\Nicolas\Documents\UNLaM\Ingenieria en   PAGE       1

                   ; 12-Tipo_Examen_Vector_de_256_elementos_de(16bits)(con_
.                  BUCLE)
                   ; ERROR EN LAS VARIABLES SI LOS 256 ELEMENTOS DEL VECTOR
.                  CUMPLIRIAN UNA/VARIAS DE LAS CONDICIONES (ACUM = $00)

                   * Dado un vector de 256 elementos, obtener la cantidad de
.                  negativos,
                   * multiplos de 8 y nulos del mismo
                   * Se conoce la direccion inicial

                   * En el juego de prueba repito 32 veces los mismos valores
.                  (08,04,02,01,$81,$82,$80,$00), por tanto hay:
                   * - 32 ceros (20h)
                   * - 96 negativos (60h)
                   * - 96 multiplos de ocho (60h)

                   * Recordar que cero es mltiplo de 8 y los negativos pueden
.                  ser mltiplos de 8
                   *************************************************************
.                  **********************************************
                   * IMPORTANTE: Para simular este ejercicio debe cambiar la
.                  configuracion de la memoria
                   * View->Memory->Memory configuration. Cerrar todo, establezca
.                  el rea de RAMOEnd de 00FF a (por ejemplo) 02FF.
                   *************************************************************
.                  **********************************************

                   ; CONSTANTES
                   RAM                     EQU             $0000
                   ROM                     EQU             $8000
                   CICLOS                  EQU             256
.                  ; CANTIDAD DE ELEMENTOS DEL VECTOR
                   MULTIPLO                EQU             8

                   ; VARIABLES
                                           ORG             RAM
                   cantC                   RMB             1
.                  * ceros
                   cantN                   RMB             1
.                  * negativos
                   cantO                   RMB             1
.                  * multiplos de ocho

                   *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *********************
                   ; VECTOR IDEM AL EJER 11 CARGADO CON DW (CON ESTE VECTOR, NO
.                  HAY NUMEROS NEGATIVOS PORQUE EL "$81,$82,$80" QUEDA EN EL
.                  BYTE MENOS SIGNIFICATIVO). SI COINCIDEN LA CANTIDAD DE CEROS
.                  Y MULTIPLOS DE 8.
                   ;vector                 DW              08,04,02,01,$81,$82,
.                  $80,$00,08,04,02,01,$81,$82,$80,$00,08,04,02,01,$81,$82,$80,
  ADDR B1 B2 B3 B4 C:\Users\Nicolas\Documents\UNLaM\Ingenieria en   PAGE       2

.                  $00,08,04,02,01,$81,$82,$80,$00,08,04,02,01,$81,$82,$80,$00,
.                  08,04,02,01,$81,$82,$80,$00,08,04,02,01,$81,$82,$80,$00,08,
.                  04,02,01,$81,$82,$80,$00,08,04,02,01,$81,$82,$80,$00,08,04,
.                  02,01,$81,$82,$80,$00,08,04,02,01,$81,$82,$80,$00,08,04,02,
.                  01,$81,$82,$80,$00,08,04,02,01,$81,$82,$80,$00,08,04,02,01,
.                  $81,$82,$80,$00,08,04,02,01,$81,$82,$80,$00,08,04,02,01,$81,
.                  $82,$80,$00,08,04,02,01,$81,$82,$80,$00,08,04,02,01,$81,$82,
.                  $80,$00,08,04,02,01,$81,$82,$80,$00,08,04,02,01,$81,$82,$80,
.                  $00,08,04,02,01,$81,$82,$80,$00,08,04,02,01,$81,$82,$80,$00,
.                  08,04,02,01,$81,$82,$80,$00,08,04,02,01,$81,$82,$80,$00,08,
.                  04,02,01,$81,$82,$80,$00,08,04,02,01,$81,$82,$80,$00,08,04,
.                  02,01,$81,$82,$80,$00,08,04,02,01,$81,$82,$80,$00,08,04,02,
.                  01,$81,$82,$80,$00,08,04,02,01,$81,$82,$80,$00,08,04,02,01,
.                  $81,$82,$80,$00,08,04,02,01,$81,$82,$80,$00
                   *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *********************
                   ; VECTOR IDEM AL EJER 11 CARGADO CON DB (CON "$00," ANTES DE
.                  CADA VALOR) (POR SER CADA ELEMENTO DE 2 BYTES)
                   ;vector         DB              $00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00
                   ;               DB              $00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00
                   ;               DB              $00,08,$00,04,$00,02,$00,01,
  ADDR B1 B2 B3 B4 C:\Users\Nicolas\Documents\UNLaM\Ingenieria en   PAGE       3

.                  $00,$81,$00,$82,$00,$80,$00,$00,$00,08,$00,04,$00,02,$00,01,
.                  $00,$81,$00,$82,$00,$80,$00,$00
                   *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *********************
                   ; VECTOR IDEM AL EJER 11 CARGADO CON DW (REEMPLAZANDO LOS
.                  "$81,$82,$80" POR "$8001,$8002,$8000". COINCIDEN LAS TRES
.                  CANTIDAD (CEROS, NEGATIVOS Y MULTIPLOS DE 8).
                   ;vector         DW              08,04,02,01,$8001,$8002,
.                  $8000,$00,08,04,02,01,$8001,$8002,$8000,$00,08,04,02,01,
.                  $8001,$8002,$8000,$00,08,04,02,01,$8001,$8002,$8000,$00,08,
.                  04,02,01,$8001,$8002,$8000,$00,08,04,02,01,$8001,$8002,$8000,
.                  $00,08,04,02,01,$8001,$8002,$8000,$00,08,04,02,01,$8001,
.                  $8002,$8000,$00,08,04,02,01,$8001,$8002,$8000,$00,08,04,02,
.                  01,$8001,$8002,$8000,$00,08,04,02,01,$8001,$8002,$8000,$00,
.                  08,04,02,01,$8001,$8002,$8000,$00,08,04,02,01,$8001,$8002,
.                  $8000,$00,08,04,02,01,$8001,$8002,$8000,$00,08,04,02,01,
.                  $8001,$8002,$8000,$00,08,04,02,01,$8001,$8002,$8000,$00,08,
.                  04,02,01,$8001,$8002,$8000,$00,08,04,02,01,$8001,$8002,$8000,
.                  $00,08,04,02,01,$8001,$8002,$8000,$00,08,04,02,01,$8001,
.                  $8002,$8000,$00,08,04,02,01,$8001,$8002,$8000,$00,08,04,02,
.                  01,$8001,$8002,$8000,$00,08,04,02,01,$8001,$8002,$8000,$00,
.                  08,04,02,01,$8001,$8002,$8000,$00,08,04,02,01,$8001,$8002,
.                  $8000,$00,08,04,02,01,$8001,$8002,$8000,$00
                   ;               DW              08,04,02,01,$8001,$8002,
.                  $8000,$00,08,04,02,01,$8001,$8002,$8000,$00,08,04,02,01,
.                  $8001,$8002,$8000,$00,08,04,02,01,$8001,$8002,$8000,$00,08,
.                  04,02,01,$8001,$8002,$8000,$00,08,04,02,01,$8001,$8002,$8000,
.                  $00
                   *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *********************
                   ; VECTOR IDEM AL EJER 11 CARGADO CON DW "TODOS NEGATIVOS".
.                  (EMPEZANDO CON "$80")
                   ; ERROR EN "cantN" POR SER LOS 256 ELEMENTOS DEL VECTOR
.                  NEGATTIBOS (cantN = $00)
  0003 80 08 80 04 vector          DW              $8008,$8004,$8002,$8001,
. 0007 80 02 80 01 $8081,$8082,$8080,$8000,$8008,$8004,$8002,$8001,$8081,$8082,
. 000B 80 80 80 82 $8080,$8000,$8008,$8004,$8002,$8001,$8081,$8082,$8080,$8000,
  ADDR B1 B2 B3 B4 C:\Users\Nicolas\Documents\UNLaM\Ingenieria en   PAGE       4

. 000F 80 80 80 00 $8008,$8004,$8002,$8001,$8081,$8082,$8080,$8000,$8008,$8004,
. 0013 80 08 80 30 $8002,$8001,$8081,$8082,$8080,$8000,$8008,$8004,$8002,$8001,
. 0017 80 02 80 01 $8081,$8082,$8080,$8000,$8008,$8004,$8002,$8001,$8081,$8082,
. 001B 80 81 80 82 $8080,$8000,$8008,$8004,$8002,$8001,$8081,$8082,$8080,$8000,
. 001F 80 20 80 00 $8008,$8004,$8002,$8001,$8081,$8082,$8080,$8000,$8008,$8004,
. 0023 80 08 80 04 $8002,$8001,$8081,$8082,$8080,$8000,$8008,$8004,$8002,$8001,
. 0027 80 02 80 00 $8081,$8082,$8080,$8000,$8008,$8004,$8002,$8001,$8081,$8082,
. 002B 80 81 80 82 $8080,$8000,$8008,$8004,$8002,$8001,$8081,$8082,$8080,$8000,
. 002F 80 80 80 00 $8008,$8004,$8002,$8001,$8081,$8082,$8080,$8000,$8008,$8004,
. 0033 80 30 80 04 $8002,$8001,$8081,$8082,$8080,$8000,$8008,$8004,$8002,$8001,
. 0037 80 02 80 01 $8081,$8082,$8080,$8000,$8008,$8004,$8002,$8001,$8081,$8082,
. 003B 80 81 80 30 $8080,$8000,$8008,$8004,$8002,$8001,$8081,$8082,$8080,$8000
. 003F 80 80 80 00
. 0043 80 08 80 04
. 0047 80 20 80 01
. 004B 80 81 80 82
. 004F 80 80 80 00
. 0053 80 08 80 04
. 0057 80 02 80 01
. 005B 80 20 80 82
. 005F 80 80 80 00
. 0063 80 08 80 20
. 0067 80 02 80 01
. 006B 80 81 80 82
. 006F 80 81 80 00
. 0073 80 08 80 04
. 0077 80 02 80 00
. 007B 80 81 80 82
. 007F 80 80 80 00
. 0083 80 80 80 04
. 0087 80 02 80 01
. 008B 80 81 80 30
. 008F 80 80 80 00
. 0093 80 08 80 04
. 0097 80 20 80 01
. 009B 80 81 80 82
. 009F 80 80 80 01
. 00A3 80 08 80 04
. 00A7 80 02 80 01
. 00AB 80 00 80 82
. 00AF 80 80 80 00
. 00B3 80 08 80 01
. 00B7 80 02 80 01
. 00BB 80 81 80 82
. 00BF 80 00 80 00
. 00C3 80 08 80 04
. 00C7 80 02 80 02
. 00CB 80 81 80 82
. 00CF 80 80 80 00
. 00D3 80 02 80 04
. 00D7 80 02 80 01
. 00DB 80 81 80 82
. 00DF 80 80 80 00
. 00E3 80 08 80 04
. 00E7 80 01 80 01
. 00EB 80 81 80 82
. 00EF 80 80 80 02
. 00F3 80 08 80 04
. 00F7 80 02 80 01
. 00FB 80 01 80 82
. 00FF 80 80 80 00
. 0103 80 08 80 02
. 0107 80 02 80 01
. 010B 80 81 80 82
. 010F 80 01 80 00
  ADDR B1 B2 B3 B4 C:\Users\Nicolas\Documents\UNLaM\Ingenieria en   PAGE       5

. 0113 80 08 80 04
. 0117 80 02 80 02
. 011B 80 81 80 82
. 011F 80 80 80 00
  0123 80 08 80 04                 DW              $8008,$8004,$8002,$8001,
. 0127 80 02 80 01 $8081,$8082,$8080,$8000,$8008,$8004,$8002,$8001,$8081,$8082,
. 012B 80 81 80 82 $8080,$8000,$8008,$8004,$8002,$8001,$8081,$8082,$8080,$8000,
. 012F 80 80 80 00 $8008,$8004,$8002,$8001,$8081,$8082,$8080,$8000,$8008,$8004,
. 0133 80 08 80 04 $8002,$8001,$8081,$8082,$8080,$8000,$8008,$8004,$8002,$8001,
. 0137 80 02 80 01 $8081,$8082,$8080,$8000,$8008,$8004,$8002,$8001,$8081,$8082,
. 013B 80 81 80 82 $8080,$8000,$8008,$8004,$8002,$8001,$8081,$8082,$8080,$8000,
. 013F 80 80 80 00 $8008,$8004,$8002,$8001,$8081,$8082,$8080,$8000,$8008,$8004,
. 0143 80 08 80 04 $8002,$8001,$8081,$8082,$8080,$8000,$8008,$8004,$8002,$8001,
. 0147 80 02 80 01 $8081,$8082,$8080,$8000,$8008,$8004,$8002,$8001,$8081,$8082,
. 014B 80 81 80 82 $8080,$8000,$8008,$8004,$8002,$8001,$8081,$8082,$8080,$8000,
. 014F 80 80 80 00 $8008,$8004,$8002,$8001,$8081,$8082,$8080,$8000
. 0153 80 08 80 04
. 0157 80 02 80 01
. 015B 80 81 80 82
. 015F 80 80 80 00
. 0163 80 08 80 04
. 0167 80 02 80 01
. 016B 80 81 80 82
. 016F 80 80 80 00
. 0173 80 08 80 04
. 0177 80 02 80 01
. 017B 80 81 80 82
. 017F 80 80 80 00
. 0183 80 08 80 04
. 0187 80 02 80 01
. 018B 80 81 80 82
. 018F 80 80 80 00
. 0193 80 08 80 04
. 0197 80 02 80 01
. 019B 80 81 80 82
. 019F 80 80 80 00
. 01A3 80 08 80 04
. 01A7 80 02 80 01
. 01AB 80 81 80 82
. 01AF 80 80 80 00
. 01B3 80 08 80 04
. 01B7 80 02 80 01
. 01BB 80 81 80 82
. 01BF 80 80 80 00
. 01C3 80 08 80 04
. 01C7 80 02 80 01
. 01CB 80 81 80 82
. 01CF 80 80 80 00
. 01D3 80 08 80 04
. 01D7 80 02 80 01
. 01DB 80 81 80 82
. 01DF 80 80 80 00
. 01E3 80 08 80 04
. 01E7 80 02 80 01
. 01EB 80 81 80 82
. 01EF 80 80 80 00
. 01F3 80 08 80 04
. 01F7 80 02 80 01
. 01FB 80 81 80 82
. 01FF 80 80 80 00
                   *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
  ADDR B1 B2 B3 B4 C:\Users\Nicolas\Documents\UNLaM\Ingenieria en   PAGE       6

.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *************************************************************
.                  *********************

                   ; CODIGO
                                           ORG             ROM
  8000 7F 00 00                            CLR             cantC
.                  ; INICIALIZO LAS VARIABLES
  8003 7F 00 01                            CLR             cantN
  8006 7F 00 02                            CLR             cantO
  8009 18 CE 00 03                         LDY             #(VECTOR)
.                  ; Y = DIR 1ER ELEM VECTOR
  800D 18 EC 00    BUCLE                   LDD             0,Y
.                  ; BUCLE SE REPITE "CICLOS" VECES
  8010 26 03                               BNE             NO_CERO
.                  ; (?Z=0). IF(!D==0) -> SALTA A NO_CERO
  8012 7C 00 00                            INC             cantC
.                  ; IF(D==0) -> cantC++
  8015 2A 03       NO_CERO                 BPL             NO_NEG
.                  ; (?N=0). IF(!D<0) -> SALTA A NO_NEG
  8017 7C 00 01                            INC             cantN
.                  ; IF(D<0) -> cantN++
  801A CE 00 08    NO_NEG                  LDX             #MULTIPLO
.                  ; X = MULTIPLO
  801D 02                                  IDIV
.                  ; D/X->X , r->D
  801E 4D                                  TSTA
.                  ; (A-0). SE ANALIZA "A" POR SI EL RESTO FUESE 256 (B SERIA
.                  $00).
  801F 26 06                               BNE             NO_MULTIPLO
.                  ; IF(!A==0) -> SALTA A NO_MULTIPLO
  8021 5D                                  TSTB
.                  ; (B-0). SI r=0 (ES MULTIPLO) -> Z=0
  8022 26 03                               BNE             NO_MULTIPLO
.                  ; IF(!B==0) -> SALTA A NO_MULTIPLO
  8024 7C 00 02                            INC             cantO
.                  ; IF(A==0 && B==0) -> cantO++
  8027 18 08       NO_MULTIPLO             INY
.                  ; Y+1 -> Y
  8029 18 08                               INY
.                  ; Y+1 -> Y (2 VECES)
  802B 18 8C 02 03                         CPY             #(VECTOR+CICLOS*2)
.                  ; #(VECTOR+CICLOS*2) = DIR ULTIMO ELEM VECTOR. (*2 PORQUE LOS
.                  ELEM DEL VECTOR SON DE 2 BYTES)
  802F 26 DC                               BNE             BUCLE
.                  ; IF(Y==DIR ULTIMO ELEM VECTOR) -> SALE DEL BUCLE (SINO
.                  REPITE "CICLOS" VECES).
  8031 20 FE       FIN                     BRA             FIN

  Symbol Table 

  RAM                0000
  NO_NEG             801A
  CICLOS             0100
  VECTOR             0003
  CANTC              0000
  BUCLE              800D
  Symbol Table     C:\Users\Nicolas\Documents\UNLaM\Ingenieria en   PAGE       7

  CANTN              0001
  CANTO              0002
  MULTIPLO           0008
  FIN                8031
  NO_CERO            8015
  ROM                8000
  NO_MULTIPLO        8027
