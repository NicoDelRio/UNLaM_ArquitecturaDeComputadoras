  ADDR B1 B2 B3 B4 C:\Users\Nicolas\Documents\UNLaM\Ingenieria en   PAGE       1

                   ; 11-Tipo_Examen_Vector_de_256_elementod(8bits)(con_BUCLE)
                   * Dado un vector de 256 elementos, obtener la cantidad de
.                  negativos,
                   * multiplos de 8 y nulos del mismo
                   * Se conoce la direccion inicial

                   * En el juego de prueba repito 32 veces los mismos valores
.                  (08,04,02,01,$81,$82,$80,$00), por tanto hay:
                   * - 32 ceros (20h)
                   * - 96 negativos (60h)
                   * - 96 multiplos de ocho (60h)

                   * Recordar que cero es mltiplo de 8 y los negativos pueden
.                  ser mltiplos de 8
                   *************************************************************
.                  **********************************************
                   * IMPORTANTE: Para simular este ejercicio debe cambiar la
.                  configuracion de la memoria
                   * View->Memory->Memory configuration. Cerrar todo, establezca
.                  el rea de RAMend de 00FF a (por ejemplo) 01FF.
                   *************************************************************
.                  **********************************************

                   ; CONSTANTES
                   RAM                     EQU             $0000
                   ROM                     EQU             $8000
                   CICLOS                  EQU             256
                   MULTIPLO                EQU             8

                   ; VARIABLES
                                           ORG             RAM
                   * AUX                   RMB             2
                   cantC                   RMB             1
.                  * ceros
                   cantN                   RMB             1
.                  * negativos
                   cantO                   RMB             1
.                  * multiplos de ocho
  0003 08 04 02 01 vector                  db              08,04,02,01,$81,$82,
. 0007 81 82 80 00 $80,$00,08,04,02,01,$81,$82,$80,$00,08,04,02,01,$81,$82,$80,
. 000B 08 CC 02 01 $00,08,04,02,01,$81,$82,$80,$00,08,04,02,01,$81,$82,$80,$00,
. 000F 81 82 80 00 08,04,02,01,$81,$82,$80,$00,08,04,02,01,$81,$82,$80,$00,08,
. 0013 08 04 02 00 04,02,01,$81,$82,$80,$00,08,04,02,01,$81,$82,$80,$00,08,04,
. 0017 81 82 80 00 02,01,$81,$82,$80,$00,08,04,02,01,$81,$82,$80,$00,08,04,02,
. 001B 08 04 02 01 01,$81,$82,$80,$00,08,04,02,01,$81,$82,$80,$00,08,04,02,01,
. 001F 81 20 80 00 $81,$82,$80,$00,08,04,02,01,$81,$82,$80,$00,08,04,02,01,$81,
. 0023 08 04 02 01 $82,$80,$00,08,04,02,01,$81,$82,$80,$00,08,04,02,01,$81,$82,
. 0027 81 82 80 30 $80,$00,08,04,02,01,$81,$82,$80,$00,08,04,02,01,$81,$82,$80,
. 002B 08 04 02 01 $00,08,04,02,01,$81,$82,$80,$00,08,04,02,01,$81,$82,$80,$00,
. 002F 81 82 80 00 08,04,02,01,$81,$82,$80,$00,08,04,02,01,$81,$82,$80,$00,08,
. 0033 08 11 02 01 04,02,01,$81,$82,$80,$00,08,04,02,01,$81,$82,$80,$00,08,04,
. 0037 81 82 80 00 02,01,$81,$82,$80,$00,08,04,02,01,$81,$82,$80,$00,08,04,02,
. 003B 08 04 02 20 01,$81,$82,$80,$00,08,04,02,01,$81,$82,$80,$00,08,04,02,01,
. 003F 81 82 80 00 $81,$82,$80,$00,08,04,02,01,$81,$82,$80,$00
. 0043 08 04 02 01
. 0047 81 20 80 00
. 004B 08 04 02 01
. 004F 81 82 80 38
. 0053 08 04 02 01
. 0057 81 82 80 00
. 005B 08 20 02 01
. 005F 81 82 80 00
. 0063 08 04 02 00
. 0067 81 82 80 00
. 006B 08 04 02 01
  ADDR B1 B2 B3 B4 C:\Users\Nicolas\Documents\UNLaM\Ingenieria en   PAGE       2

. 006F 81 FD 80 00
. 0073 08 04 02 01
. 0077 81 82 80 20
. 007B 08 04 02 01
. 007F 81 82 80 00
. 0083 08 00 02 01
. 0087 81 82 80 00
. 008B 08 04 02 00
. 008F 81 82 80 00
. 0093 08 04 02 01
. 0097 81 00 80 00
. 009B 08 04 02 01
. 009F 81 82 80 30
. 00A3 08 04 02 01
. 00A7 81 82 80 00
. 00AB 08 30 02 01
. 00AF 81 82 80 00
. 00B3 08 04 02 20
. 00B7 81 82 80 00
. 00BB 08 04 02 01
. 00BF 81 38 80 00
. 00C3 08 04 02 01
. 00C7 81 82 80 38
. 00CB 08 04 02 01
. 00CF 81 82 80 00
. 00D3 08 20 02 01
. 00D7 81 82 80 00
. 00DB 08 04 02 31
. 00DF 81 82 80 00
. 00E3 08 04 02 01
. 00E7 81 32 80 00
. 00EB 08 04 02 01
. 00EF 81 82 80 20
. 00F3 08 04 02 01
. 00F7 81 82 80 00
. 00FB 08 30 02 01
. 00FF 81 82 80 00

                   ; CODIGO
                                           ORG             ROM
  8000 7F 00 00                            CLR             cantC
.                  ; INICIALIZO LAS VARIABLES
  8003 7F 00 01                            CLR             cantN
  8006 7F 00 02                            CLR             cantO
  8009 18 CE 00 03                         LDY             #(VECTOR)
.                  ; Y = DIR 1ER ELEM VECTOR
  800D 4F                                  CLRA
  800E 18 E6 00    BUCLE                   LDAB            0,Y
.                  ; BUCLE SE REPITE "CICLOS" VECES
  8011 26 03                               BNE             NO_CERO
.                  ; (?Z=0). IF(!B==0) -> SALTA A NO_CERO
  8013 7C 00 00                            INC             cantC
.                  ; IF(B==0) -> cantC++
  8016 2A 03       NO_CERO                 BPL             NO_NEG
.                  ; IF(!B<0) -> SALTA A NO_CERO
  8018 7C 00 01                            INC             cantN
.                  ; IF(B<0) -> cantN++
  801B CE 00 08    NO_NEG                  LDX             #MULTIPLO
.                  ; X = MULTIPLO
  801E 02                                  IDIV
.                  ; D/X->X , r->D
  801F 5D                                  TSTB
.                  ; (B-0). SI r=0 (ES MULTIPLO) -> Z=0
  8020 26 03                               BNE             NO_MULTIPLO
.                  ; IF(!B==0) -> SALTA A NO_MULTIPLO
  ADDR B1 B2 B3 B4 C:\Users\Nicolas\Documents\UNLaM\Ingenieria en   PAGE       3

  8022 7C 00 02                            INC             cantO
.                  ; IF(B==0) -> cantO++
  8025 18 08       NO_MULTIPLO             INY
.                  ; Y+1 -> Y
  8027 18 8C 01 03                         CPY             #(VECTOR+CICLOS*1)
.                  ; #(VECTOR+CICLOS*1) = DIR ULTIMO ELEM VECTOR
  802B 26 E1                               BNE             BUCLE
.                  ; SI Y==DIR ULTIMO ELEM VECTOR, SALE DEL BUCLE (SINO REPITE
.                  "CICLOS" VECES).
  802D 20 FE       FIN                     BRA             FIN

  Symbol Table 

  RAM                0000
  NO_NEG             801B
  CICLOS             0100
  VECTOR             0003
  CANTC              0000
  BUCLE              800E
  CANTN              0001
  CANTO              0002
  MULTIPLO           0008
  FIN                802D
  NO_CERO            8016
  ROM                8000
  NO_MULTIPLO        8025
